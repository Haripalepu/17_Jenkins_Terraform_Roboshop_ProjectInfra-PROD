pipeline {
    agent {
        node {
            label 'Agent'
        }
    }
    options {
        ansiColor('xterm')
    }

    stages {
        stage('DB ALB') { //There is no dependency between DB and ALB so we can install parallel.
            parallel {  //parallel will run two stage at a time.
                stage('DB') {
                    steps {
                       sh """
                        cd 04_database
                        terraform init -reconfigure
                        terraform destroy -auto-approve
                      """
                    }
                }
                stage('APP ALB') {
                    steps {
                       sh """
                        cd 05_app_alb
                        terraform init -reconfigure
                        terraform destroy -auto-approve
                      """
                    }
                }
            }
        }

        stage('VPN') { //VPN has dependency on SG
            steps {
                sh """
                    cd 03_vpn
                    terraform init -reconfigure
                    terraform destroy -auto-approve
                """
            }
        }

        stage('SG') { //Sg has dependency on VPC
            steps {
                sh """
                    cd 02_sg
                    terraform init -reconfigure
                    terraform destroy -auto-approve
                """
            }
        }

        stage('VPC') {
            steps {
                sh """
                    cd 01_vpc
                    terraform init -reconfigure
                    terraform destroy -auto-approve
                """
            }
        } 
       
    }
    // post build
    post { 
        always { 
            echo 'I will always say Hello again!'
        }
        failure { 
            echo 'this runs when pipeline is failed, used generally to send some alerts'
        }
        success{
            echo 'I will say Hello when pipeline is success'
        }
    }
}